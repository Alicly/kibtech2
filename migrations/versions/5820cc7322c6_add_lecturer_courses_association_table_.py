"""Add lecturer_courses association table for many-to-many lecturer-course relationship

Revision ID: 5820cc7322c6
Revises: 9e76790a6b6c
Create Date: 2025-06-19 13:46:21.657283

"""
from alembic import op
import sqlalchemy as sa


# revision identifiers, used by Alembic.
revision = '5820cc7322c6'
down_revision = '9e76790a6b6c'
branch_labels = None
depends_on = None


def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('lecturer_courses',
    sa.Column('lecturer_id', sa.Integer(), nullable=False),
    sa.Column('course_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['course_id'], ['courses.id'], ),
    sa.ForeignKeyConstraint(['lecturer_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('lecturer_id', 'course_id')
    )
    with op.batch_alter_table('units', schema=None) as batch_op:
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=False,
               autoincrement=True)
        batch_op.create_unique_constraint('uq_code_course', ['code', 'course_id'])

    # ### end Alembic commands ###


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    with op.batch_alter_table('units', schema=None) as batch_op:
        batch_op.drop_constraint('uq_code_course', type_='unique')
        batch_op.alter_column('id',
               existing_type=sa.INTEGER(),
               nullable=True,
               autoincrement=True)

    op.drop_table('lecturer_courses')
    # ### end Alembic commands ###
